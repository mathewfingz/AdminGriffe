{{- if .Values.monitoring.grafana.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "worker-sync.fullname" . }}-grafana
  labels:
    {{- include "worker-sync.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  serviceName: {{ include "worker-sync.fullname" . }}-grafana-headless
  replicas: {{ .Values.monitoring.grafana.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "worker-sync.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-grafana.yaml") . | sha256sum }}
        checksum/dashboards: {{ include (print $.Template.BasePath "/configmap-grafana-dashboards.yaml") . | sha256sum }}
        {{- with .Values.monitoring.grafana.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "worker-sync.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      {{- with .Values.monitoring.grafana.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "worker-sync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.monitoring.grafana.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-grafana
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              # Prepare Grafana data directory
              mkdir -p /var/lib/grafana/dashboards
              mkdir -p /var/lib/grafana/plugins
              mkdir -p /var/lib/grafana/provisioning/dashboards
              mkdir -p /var/lib/grafana/provisioning/datasources
              mkdir -p /var/lib/grafana/provisioning/notifiers
              
              # Set proper permissions
              chown -R 472:472 /var/lib/grafana
              chmod -R 755 /var/lib/grafana
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
          securityContext:
            runAsUser: 0
      containers:
        - name: grafana
          image: "{{ .Values.monitoring.grafana.image.repository }}:{{ .Values.monitoring.grafana.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.monitoring.grafana.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "worker-sync.fullname" . }}-grafana-secret
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "worker-sync.fullname" . }}-grafana-secret
                  key: admin-password
            {{- if .Values.monitoring.grafana.database.enabled }}
            - name: GF_DATABASE_TYPE
              value: {{ .Values.monitoring.grafana.database.type | quote }}
            - name: GF_DATABASE_HOST
              value: {{ .Values.monitoring.grafana.database.host | quote }}
            - name: GF_DATABASE_NAME
              value: {{ .Values.monitoring.grafana.database.name | quote }}
            - name: GF_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "worker-sync.fullname" . }}-grafana-secret
                  key: db-user
            - name: GF_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "worker-sync.fullname" . }}-grafana-secret
                  key: db-password
            {{- end }}
            {{- if .Values.monitoring.grafana.smtp.enabled }}
            - name: GF_SMTP_ENABLED
              value: "true"
            - name: GF_SMTP_HOST
              value: {{ .Values.monitoring.grafana.smtp.host | quote }}
            - name: GF_SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "worker-sync.fullname" . }}-grafana-secret
                  key: smtp-user
            - name: GF_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "worker-sync.fullname" . }}-grafana-secret
                  key: smtp-password
            - name: GF_SMTP_FROM_ADDRESS
              value: {{ .Values.monitoring.grafana.smtp.fromAddress | quote }}
            - name: GF_SMTP_FROM_NAME
              value: {{ .Values.monitoring.grafana.smtp.fromName | quote }}
            {{- end }}
            {{- with .Values.monitoring.grafana.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            {{- toYaml .Values.monitoring.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
            {{- if .Values.monitoring.grafana.notifiers.enabled }}
            - name: grafana-notifiers
              mountPath: /etc/grafana/provisioning/notifiers
            {{- end }}
            {{- with .Values.monitoring.grafana.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.monitoring.grafana.securityContext | nindent 12 }}
        {{- if .Values.monitoring.grafana.sidecar.enabled }}
        - name: grafana-sc-dashboard
          image: "{{ .Values.monitoring.grafana.sidecar.image.repository }}:{{ .Values.monitoring.grafana.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.monitoring.grafana.sidecar.image.pullPolicy }}
          env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: "grafana_dashboard"
            - name: FOLDER
              value: "/tmp/dashboards"
            - name: RESOURCE
              value: "both"
          resources:
            {{- toYaml .Values.monitoring.grafana.sidecar.resources | nindent 12 }}
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        {{- end }}
      volumes:
        - name: grafana-config
          configMap:
            name: {{ include "worker-sync.fullname" . }}-grafana-config
        - name: grafana-datasources
          configMap:
            name: {{ include "worker-sync.fullname" . }}-grafana-config
            items:
              - key: datasources.yaml
                path: datasources.yaml
        - name: grafana-dashboards-config
          configMap:
            name: {{ include "worker-sync.fullname" . }}-grafana-config
            items:
              - key: dashboards.yaml
                path: dashboards.yaml
        - name: grafana-dashboards
          configMap:
            name: {{ include "worker-sync.fullname" . }}-grafana-dashboards
        {{- if .Values.monitoring.grafana.notifiers.enabled }}
        - name: grafana-notifiers
          configMap:
            name: {{ include "worker-sync.fullname" . }}-grafana-config
            items:
              - key: notifiers.yaml
                path: notifiers.yaml
        {{- end }}
        {{- if .Values.monitoring.grafana.sidecar.enabled }}
        - name: sc-dashboard-volume
          emptyDir: {}
        {{- end }}
        {{- with .Values.monitoring.grafana.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.monitoring.grafana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitoring.grafana.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitoring.grafana.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: grafana-storage
        labels:
          {{- include "worker-sync.labels" . | nindent 10 }}
          app.kubernetes.io/component: grafana
      spec:
        accessModes:
          {{- range .Values.monitoring.grafana.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if .Values.monitoring.grafana.persistence.storageClass }}
        {{- if (eq "-" .Values.monitoring.grafana.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.monitoring.grafana.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.monitoring.grafana.persistence.size | quote }}
{{- end }}