{{- if .Values.monitoring.alertmanager.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "worker-sync.fullname" . }}-alertmanager
  labels:
    {{- include "worker-sync.labels" . | nindent 4 }}
    app.kubernetes.io/component: alertmanager
spec:
  replicas: {{ .Values.monitoring.alertmanager.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "worker-sync.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: alertmanager
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-alertmanager.yaml") . | sha256sum }}
        {{- with .Values.monitoring.alertmanager.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "worker-sync.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: alertmanager
    spec:
      {{- with .Values.monitoring.alertmanager.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "worker-sync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.monitoring.alertmanager.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-alertmanager
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              # Prepare AlertManager data directory
              mkdir -p /alertmanager/data
              chown -R 65534:65534 /alertmanager
              chmod -R 755 /alertmanager
          volumeMounts:
            - name: alertmanager-storage
              mountPath: /alertmanager
          securityContext:
            runAsUser: 0
      containers:
        - name: alertmanager
          image: "{{ .Values.monitoring.alertmanager.image.repository }}:{{ .Values.monitoring.alertmanager.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.monitoring.alertmanager.image.pullPolicy }}
          args:
            - --config.file=/etc/alertmanager/alertmanager.yml
            - --storage.path=/alertmanager/data
            - --data.retention={{ .Values.monitoring.alertmanager.retention | default "120h" }}
            - --web.listen-address=0.0.0.0:9093
            - --web.external-url={{ .Values.monitoring.alertmanager.externalUrl | default "http://localhost:9093" }}
            - --cluster.listen-address=0.0.0.0:9094
            {{- if gt (.Values.monitoring.alertmanager.replicas | int) 1 }}
            {{- range $i := until (.Values.monitoring.alertmanager.replicas | int) }}
            - --cluster.peer={{ include "worker-sync.fullname" $ }}-alertmanager-{{ $i }}.{{ include "worker-sync.fullname" $ }}-alertmanager-headless:9094
            {{- end }}
            {{- end }}
            {{- with .Values.monitoring.alertmanager.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9093
              protocol: TCP
            - name: cluster
              containerPort: 9094
              protocol: TCP
          env:
            {{- with .Values.monitoring.alertmanager.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
          resources:
            {{- toYaml .Values.monitoring.alertmanager.resources | nindent 12 }}
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager
            - name: alertmanager-storage
              mountPath: /alertmanager
            {{- with .Values.monitoring.alertmanager.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.monitoring.alertmanager.securityContext | nindent 12 }}
        {{- if .Values.monitoring.alertmanager.configReloader.enabled }}
        - name: config-reloader
          image: "{{ .Values.monitoring.alertmanager.configReloader.image.repository }}:{{ .Values.monitoring.alertmanager.configReloader.image.tag }}"
          imagePullPolicy: {{ .Values.monitoring.alertmanager.configReloader.image.pullPolicy }}
          args:
            - --volume-dir=/etc/alertmanager
            - --webhook-url=http://localhost:9093/-/reload
          resources:
            {{- toYaml .Values.monitoring.alertmanager.configReloader.resources | nindent 12 }}
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager
              readOnly: true
        {{- end }}
      volumes:
        - name: alertmanager-config
          configMap:
            name: {{ include "worker-sync.fullname" . }}-alertmanager-config
        {{- if not .Values.monitoring.alertmanager.persistence.enabled }}
        - name: alertmanager-storage
          emptyDir: {}
        {{- else }}
        - name: alertmanager-storage
          persistentVolumeClaim:
            claimName: {{ include "worker-sync.fullname" . }}-alertmanager-storage
        {{- end }}
        {{- with .Values.monitoring.alertmanager.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.monitoring.alertmanager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitoring.alertmanager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.monitoring.alertmanager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}