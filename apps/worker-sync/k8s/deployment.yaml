apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-sync
  namespace: sync-system
  labels:
    app: worker-sync
    version: v1.0.0
    component: sync-worker
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: worker-sync
  template:
    metadata:
      labels:
        app: worker-sync
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: worker-sync
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: worker-sync
        image: worker-sync:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        - name: health
          containerPort: 3003
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: HEALTH_PORT
          value: "3003"
        - name: LOG_LEVEL
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: postgres-url
        - name: MYSQL_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mysql-url
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: mongodb-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cache-secrets
              key: redis-url
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: brokers
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: messaging-secrets
              key: rabbitmq-url
        envFrom:
        - configMapRef:
            name: worker-sync-config
        - secretRef:
            name: worker-sync-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: logs
        emptyDir: {}
      - name: config
        configMap:
          name: worker-sync-config
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - worker-sync
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: worker-sync-service
  namespace: sync-system
  labels:
    app: worker-sync
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3001
    targetPort: http
    protocol: TCP
  - name: health
    port: 3003
    targetPort: health
    protocol: TCP
  selector:
    app: worker-sync

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: worker-sync
  namespace: sync-system
  labels:
    app: worker-sync

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: sync-system
  name: worker-sync-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: worker-sync-rolebinding
  namespace: sync-system
subjects:
- kind: ServiceAccount
  name: worker-sync
  namespace: sync-system
roleRef:
  kind: Role
  name: worker-sync-role
  apiGroup: rbac.authorization.k8s.io